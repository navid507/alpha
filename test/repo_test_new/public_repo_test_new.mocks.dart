// Mocks generated by Mockito 5.0.17 from annotations
// in alpha/test/repo_test_new/public_repo_test_new.dart.
// Do not manually edit this file.

import 'dart:async' as _i9;

import 'package:alpha/back/accounting/models/record/record_type_result.dart'
    as _i7;
import 'package:alpha/back/public_repo/models/alpha_club/alpha_club_result.dart'
    as _i3;
import 'package:alpha/back/public_repo/models/alpha_teams/alpha_teams_result.dart'
    as _i6;
import 'package:alpha/back/public_repo/models/gallery/gallery_result.dart'
    as _i4;
import 'package:alpha/back/public_repo/models/top_swimmers/top_swimmers_result.dart'
    as _i5;
import 'package:alpha/back/public_repo/public_apis.dart' as _i8;
import 'package:alpha/main_functions/http_functions.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeHttpFunctionsInterface_0 extends _i1.Fake
    implements _i2.HttpFunctionsInterface {}

class _FakeAlphaClubResult_1 extends _i1.Fake implements _i3.AlphaClubResult {}

class _FakeGalleryResult_2 extends _i1.Fake implements _i4.GalleryResult {}

class _FakeTopSwimmersResult_3 extends _i1.Fake
    implements _i5.TopSwimmersResult {}

class _FakeAlphaTeamsResult_4 extends _i1.Fake implements _i6.AlphaTeamsResult {
}

class _FakeRecordTypesResult_5 extends _i1.Fake
    implements _i7.RecordTypesResult {}

/// A class which mocks [PublicApis].
///
/// See the documentation for Mockito's code generation for more information.
class MockPublicApis extends _i1.Mock implements _i8.PublicApis {
  MockPublicApis() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HttpFunctionsInterface get httpCalls =>
      (super.noSuchMethod(Invocation.getter(#httpCalls),
              returnValue: _FakeHttpFunctionsInterface_0())
          as _i2.HttpFunctionsInterface);
  @override
  set httpCalls(_i2.HttpFunctionsInterface? _httpCalls) =>
      super.noSuchMethod(Invocation.setter(#httpCalls, _httpCalls),
          returnValueForMissingStub: null);
  @override
  _i9.Future<_i3.AlphaClubResult> getAlphaClub({String? uid = r'-1'}) =>
      (super.noSuchMethod(Invocation.method(#getAlphaClub, [], {#uid: uid}),
              returnValue:
                  Future<_i3.AlphaClubResult>.value(_FakeAlphaClubResult_1()))
          as _i9.Future<_i3.AlphaClubResult>);
  @override
  _i9.Future<_i4.GalleryResult> getGallery({String? uid = r'-1'}) =>
      (super.noSuchMethod(Invocation.method(#getGallery, [], {#uid: uid}),
              returnValue:
                  Future<_i4.GalleryResult>.value(_FakeGalleryResult_2()))
          as _i9.Future<_i4.GalleryResult>);
  @override
  _i9.Future<_i5.TopSwimmersResult> getTopSwimmers({String? uid = r'-1'}) =>
      (super.noSuchMethod(Invocation.method(#getTopSwimmers, [], {#uid: uid}),
              returnValue: Future<_i5.TopSwimmersResult>.value(
                  _FakeTopSwimmersResult_3()))
          as _i9.Future<_i5.TopSwimmersResult>);
  @override
  _i9.Future<_i6.AlphaTeamsResult> getAlphaTeams() =>
      (super.noSuchMethod(Invocation.method(#getAlphaTeams, []),
              returnValue:
                  Future<_i6.AlphaTeamsResult>.value(_FakeAlphaTeamsResult_4()))
          as _i9.Future<_i6.AlphaTeamsResult>);
  @override
  _i9.Future<_i7.RecordTypesResult> getRecordTypes() => (super.noSuchMethod(
          Invocation.method(#getRecordTypes, []),
          returnValue:
              Future<_i7.RecordTypesResult>.value(_FakeRecordTypesResult_5()))
      as _i9.Future<_i7.RecordTypesResult>);
}
